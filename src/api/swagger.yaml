basePath: /api
definitions:
  model.Category:
    properties:
      color:
        description: The category's theme color. (Such as Rainbow Dash's color is
          "#60AEE4")
        type: string
      created_at:
        description: The category's creation time.
        type: integer
      description:
        description: The category's description.
        type: string
      icon:
        description: 'The category''s icon. (Based on Material Design Icons, Reference
          site: https://pictogrammers.com/library/mdi/) (Such as "fingerprint": https://pictogrammers.com/library/mdi/icon/fingerprint/)'
        type: string
      id:
        description: The category's id. As primary key.
        type: integer
      name:
        description: The category's name.
        type: string
      updated_at:
        description: The category's last update time.
        type: integer
    type: object
  model.Challenge:
    properties:
      attachment:
        allOf:
        - $ref: '#/definitions/model.File'
        description: The challenge's attachment.
      bloods:
        items:
          $ref: '#/definitions/model.Submission'
        type: array
      category:
        allOf:
        - $ref: '#/definitions/model.Category'
        description: The challenge's category.
      category_id:
        description: The challenge's category.
        type: integer
      cpu_limit:
        description: The challenge's CPU limit. (0 means no limit)
        type: integer
      created_at:
        description: The challenge's creation time.
        type: integer
      description:
        description: The challenge's description.
        type: string
      difficulty:
        description: The degree of difficulty. (From 1 to 5)
        type: integer
      duration:
        description: The duration of container maintenance in the initial state. (Seconds)
        type: integer
      envs:
        items:
          $ref: '#/definitions/model.Env'
        type: array
      flags:
        items:
          $ref: '#/definitions/model.Flag'
        type: array
      id:
        description: The challenge's id. As primary key.
        type: integer
      image_name:
        description: The challenge's image name.
        type: string
      is_dynamic:
        description: Whether the challenge is based on dynamic container.
        type: boolean
      is_practicable:
        description: Whether the challenge is practicable. (Is the practice field
          visible.)
        type: boolean
      memory_limit:
        description: The challenge's memory limit. (0 means no limit)
        type: integer
      ports:
        items:
          $ref: '#/definitions/model.Port'
        type: array
      practice_pts:
        description: The points will be given when the challenge is solved in practice
          field.
        type: integer
      solved:
        $ref: '#/definitions/model.Submission'
      solved_times:
        type: integer
      title:
        description: The challenge's title.
        type: string
      updated_at:
        description: The challenge's last update time.
        type: integer
    type: object
  model.Env:
    properties:
      challenge:
        $ref: '#/definitions/model.Challenge'
      challenge_id:
        type: integer
      id:
        type: integer
      key:
        type: string
      value:
        type: string
    type: object
  model.File:
    properties:
      name:
        type: string
      size:
        type: integer
    type: object
  model.Flag:
    properties:
      banned:
        description: Whether the flag is banned. If banned, the user who submitted
          the flag will be judged as cheating.
        type: boolean
      challenge:
        allOf:
        - $ref: '#/definitions/model.Challenge'
        description: The challenge which the flag belongs to.
      challenge_id:
        description: The challenge id. The flag belongs to.
        type: integer
      env:
        description: The environment variable which is used to be injected with the
          flag.
        type: string
      id:
        description: The flag id.
        type: integer
      type:
        description: The flag type. ("static"/"dynamic"/"pattern")
        type: string
      value:
        description: The flag content. Maybe a string or a regex, or the placeholder
          for dynamic challenges. (Such as "flag{friendsh1p_1s_magic}" or "flag{[a-zA-Z]{5}}"
          or "flag{[UUID]}")
        type: string
    type: object
  model.Game:
    properties:
      bio:
        description: The game's short description.
        type: string
      created_at:
        description: The game's creation time.
        type: integer
      description:
        description: The game's description. (Markdown supported.)
        type: string
      ended_at:
        description: The game's end time. (Unix)
        type: integer
      first_blood_reward_ratio:
        description: The prize ratio of first blood.
        type: number
      id:
        description: The game's id. As primary key.
        type: integer
      is_enabled:
        description: Whether the game is enabled.
        type: boolean
      is_need_write_up:
        description: Whether the game need write up.
        type: boolean
      is_public:
        description: Whether the game is public.
        type: boolean
      member_limit_max:
        description: The maximum team member limit.
        type: integer
      member_limit_min:
        description: The minimum team member limit.
        type: integer
      parallel_container_limit:
        description: The maximum parallel container limit.
        type: integer
      poster:
        allOf:
        - $ref: '#/definitions/model.File'
        description: The game's poster image.
      public_key:
        description: The game's public key.
        type: string
      second_blood_reward_ratio:
        description: The prize ratio of second blood.
        type: number
      started_at:
        description: The game's start time. (Unix)
        type: integer
      third_blood_reward_ratio:
        description: The prize ratio of third blood.
        type: number
      title:
        description: The game's title.
        type: string
      updated_at:
        description: The game's last update time.
        type: integer
    type: object
  model.GameChallenge:
    properties:
      challenge:
        $ref: '#/definitions/model.Challenge'
      challenge_id:
        type: integer
      game:
        $ref: '#/definitions/model.Game'
      game_id:
        type: integer
      id:
        type: integer
      is_enabled:
        type: boolean
      max_pts:
        type: integer
      min_pts:
        type: integer
      pts:
        type: integer
    type: object
  model.Port:
    properties:
      challenge:
        allOf:
        - $ref: '#/definitions/model.Challenge'
        description: The JeopardyImage which the port belongs to.
      challenge_id:
        description: The JeopardyImage which the port belongs to.
        type: integer
      description:
        description: The port's description.
        type: string
      id:
        description: The port's id. As primary key.
        type: integer
      value:
        description: The port number.
        type: integer
    type: object
  model.Submission:
    properties:
      challenge:
        allOf:
        - $ref: '#/definitions/model.Challenge'
        description: The challenge which is related to this submission.
      challenge_id:
        description: The challenge which is related to this submission.
        type: integer
      created_at:
        description: The submission's creation time.
        type: integer
      flag:
        description: The flag which was submitted for judgement.
        type: string
      game:
        allOf:
        - $ref: '#/definitions/model.Game'
        description: The game which is related to this submission.
      game_challenge:
        allOf:
        - $ref: '#/definitions/model.GameChallenge'
        description: The game_challenge which is related to this submission.
      game_challenge_id:
        description: The game_challenge which is related to this submission.
        type: integer
      game_id:
        description: The game which is related to this submission. (Must be set when
          TeamID is set)
        type: integer
      id:
        description: The submission's id. As primary key.
        type: integer
      pts:
        description: The points of the submission.
        type: integer
      rank:
        description: The rank of the submission.
        type: integer
      status:
        description: The status of the submission. (0-meaningless, 1-accepted, 2-incorrect,
          3-cheat, 4-invalid(duplicate, etc.))
        type: integer
      team:
        allOf:
        - $ref: '#/definitions/model.Team'
        description: The team which submitted the flag.
      team_id:
        description: The team which submitted the flag. (Must be set when GameID is
          set)
        type: integer
      updated_at:
        description: The submission's last update time.
        type: integer
      user:
        allOf:
        - $ref: '#/definitions/model.User'
        description: The user who submitted the flag.
      user_id:
        description: The user who submitted the flag.
        type: integer
    type: object
  model.Team:
    properties:
      avatar:
        allOf:
        - $ref: '#/definitions/model.File'
        description: The team's avatar.
      captain:
        allOf:
        - $ref: '#/definitions/model.User'
        description: The captain's user.
      captain_id:
        description: The captain's id.
        type: integer
      created_at:
        description: The team's creation time.
        type: integer
      description:
        description: The team's description.
        type: string
      email:
        description: The team's email.
        type: string
      id:
        description: The team's id. As primary key.
        type: integer
      invite_token:
        description: The team's invite token.
        type: string
      is_locked:
        description: Whether the team is locked. (true/false)
        type: boolean
      name:
        description: The team's name.
        type: string
      updated_at:
        description: The team's last update time.
        type: integer
      users:
        description: The team's users.
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      avatar:
        allOf:
        - $ref: '#/definitions/model.File'
        description: The user's avatar.
      created_at:
        description: The user's creation time.
        type: integer
      description:
        description: The user's description.
        type: string
      email:
        description: The user's email.
        type: string
      group:
        description: The user's group.
        type: string
      id:
        description: The user's id. As primary key.
        type: integer
      nickname:
        description: The user's nickname. Not unique.
        type: string
      password:
        description: The user's password. Crypt.
        type: string
      remote_ip:
        description: The user's remote ip.
        type: string
      teams:
        description: The user's teams.
        items:
          $ref: '#/definitions/model.Team'
        type: array
      updated_at:
        description: The user's last update time.
        type: integer
      username:
        description: The user's username. As a unique identifier.
        type: string
    type: object
  request.CategoryCreateRequest:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      name:
        type: string
    required:
    - color
    - description
    - icon
    - name
    type: object
  request.CategoryDeleteRequest:
    properties:
      id:
        type: integer
    type: object
  request.CategoryUpdateRequest:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - color
    - description
    - icon
    - id
    - name
    type: object
  request.ChallengeCreateRequest:
    properties:
      attachment_url:
        type: string
      category_id:
        type: integer
      cpu_limit:
        type: integer
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      envs:
        items:
          $ref: '#/definitions/model.Env'
        type: array
      has_attachment:
        type: boolean
      image_name:
        type: string
      is_dynamic:
        type: boolean
      is_practicable:
        type: boolean
      memory_limit:
        type: integer
      ports:
        items:
          $ref: '#/definitions/model.Port'
        type: array
      practice_pts:
        type: integer
      title:
        type: string
    type: object
  request.ChallengeDeleteRequest:
    type: object
  request.ChallengeUpdateRequest:
    properties:
      attachment_url:
        type: string
      category_id:
        type: integer
      cpu_limit:
        type: integer
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      envs:
        items:
          $ref: '#/definitions/model.Env'
        type: array
      has_attachment:
        type: boolean
      image_name:
        type: string
      is_dynamic:
        type: boolean
      is_practicable:
        type: boolean
      memory_limit:
        type: integer
      ports:
        items:
          $ref: '#/definitions/model.Port'
        type: array
      practice_pts:
        type: integer
      title:
        type: string
    type: object
  request.ConfigUpdateRequest:
    properties:
      container:
        properties:
          parallel_limit:
            type: integer
          request_limit:
            type: integer
        type: object
      site:
        properties:
          color:
            type: string
          description:
            type: string
          title:
            type: string
        type: object
      user:
        properties:
          register:
            properties:
              captcha:
                properties:
                  enabled:
                    type: boolean
                type: object
              email:
                properties:
                  domains:
                    items:
                      type: string
                    type: array
                  enabled:
                    type: boolean
                type: object
              enabled:
                type: boolean
            type: object
        type: object
    type: object
  request.GameCreateRequest:
    properties:
      bio:
        type: string
      cover_url:
        type: string
      description:
        type: string
      ended_at:
        type: integer
      first_blood_reward_ratio:
        type: number
      is_enabled:
        type: boolean
      is_need_write_up:
        type: boolean
      is_public:
        type: boolean
      member_limit_max:
        type: integer
      member_limit_min:
        type: integer
      parallel_container_limit:
        type: integer
      second_blood_reward_ratio:
        type: number
      started_at:
        type: integer
      third_blood_reward_ratio:
        type: number
      title:
        type: string
    required:
    - title
    type: object
  request.GameDeleteRequest:
    type: object
  request.GameTeamCreateRequest:
    properties:
      password:
        type: string
      team_id:
        type: integer
      user_id:
        type: integer
    type: object
  request.GameTeamUpdateRequest:
    properties:
      is_allowed:
        type: boolean
    type: object
  request.GameUpdateRequest:
    properties:
      bio:
        type: string
      cover_url:
        type: string
      description:
        type: string
      ended_at:
        type: integer
      first_blood_reward_ratio:
        type: number
      is_enabled:
        type: boolean
      is_need_write_up:
        type: boolean
      is_public:
        type: boolean
      member_limit_max:
        type: integer
      member_limit_min:
        type: integer
      parallel_container_limit:
        type: integer
      second_blood_reward_ratio:
        type: number
      started_at:
        type: integer
      third_blood_reward_ratio:
        type: number
      title:
        type: string
    type: object
  request.PodCreateRequest:
    properties:
      challenge_id:
        type: integer
      game_id:
        type: integer
      team_id:
        type: integer
    required:
    - challenge_id
    type: object
  request.PodRemoveRequest:
    properties:
      game_id:
        type: integer
      team_id:
        type: integer
    type: object
  request.PodRenewRequest:
    properties:
      game_id:
        type: integer
      team_id:
        type: integer
    type: object
  request.SubmissionCreateRequest:
    properties:
      challenge_id:
        description: 题目 Id
        type: integer
      flag:
        description: 提交内容
        type: string
      game_id:
        description: 比赛 Id
        type: integer
      team_id:
        description: 团队 Id
        type: integer
    required:
    - challenge_id
    - flag
    type: object
  request.SubmissionDeleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.TeamCreateRequest:
    properties:
      captain_id:
        type: integer
      description:
        type: string
      email:
        type: string
      name:
        type: string
    required:
    - captain_id
    - name
    type: object
  request.TeamDeleteRequest:
    type: object
  request.TeamUpdateRequest:
    properties:
      captain_id:
        type: integer
      description:
        type: string
      email:
        type: string
      is_locked:
        type: boolean
      name:
        type: string
    type: object
  request.TeamUserCreateRequest:
    properties:
      invite_token:
        type: string
      user_id:
        type: integer
    type: object
  request.TeamUserDeleteRequest:
    properties:
      team_id:
        type: integer
      user_id:
        type: integer
    required:
    - team_id
    - user_id
    type: object
  request.UserCreateRequest:
    properties:
      email:
        type: string
      group:
        type: string
      nickname:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - nickname
    - password
    - username
    type: object
  request.UserDeleteRequest:
    type: object
  request.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserRegisterRequest:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      token:
        type: string
      username:
        type: string
    required:
    - email
    - nickname
    - password
    - username
    type: object
  request.UserUpdateRequest:
    properties:
      email:
        type: string
      group:
        type: string
      nickname:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    type: object
info:
  contact: {}
  title: Cloudsdale
paths:
  /categories/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: get category
      tags:
      - Category
    post:
      consumes:
      - application/json
      parameters:
      - description: CategoryCreateRequest
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CategoryCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: create new category
      tags:
      - Category
  /categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: CategoryDeleteRequest
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CategoryDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete category
      tags:
      - Category
    put:
      consumes:
      - application/json
      parameters:
      - description: CategoryUpdateRequest
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CategoryUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: update category
      tags:
      - Category
  /challenges/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: category_id
        type: integer
      - in: query
        name: difficulty
        type: integer
      - in: query
        name: game_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: is_detailed
        type: boolean
      - in: query
        name: is_dynamic
        type: boolean
      - in: query
        name: is_practicable
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: team_id
        type: integer
      - in: query
        name: title
        type: string
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 题目查询
      tags:
      - Challenge
    post:
      consumes:
      - application/json
      parameters:
      - description: ChallengeCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建题目
      tags:
      - Challenge
  /challenges/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ChallengeDeleteRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除题目
      tags:
      - Challenge
    put:
      consumes:
      - application/json
      parameters:
      - description: ChallengeUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新题目
      tags:
      - Challenge
  /challenges/{id}/attachment:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除附件
      tags:
      - Challenge
    post:
      consumes:
      - application/json
      parameters:
      - description: attachment
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 保存附件
      tags:
      - Challenge
  /challenges/{id}/flags:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建 flag
      tags:
      - Challenge
  /challenges/{id}/flags/{flag_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除 flag
      tags:
      - Challenge
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新 flag
      tags:
      - Challenge
  /configs/:
    get:
      consumes:
      - application/json
      description: 配置全部查询
      produces:
      - application/json
      responses: {}
      summary: 配置全部查询
      tags:
      - Config
    put:
      consumes:
      - application/json
      description: 更新配置
      parameters:
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.ConfigUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新配置
      tags:
      - Config
  /configs/captcha:
    get:
      consumes:
      - application/json
      description: Captcha 配置查询
      produces:
      - application/json
      responses: {}
      summary: Captcha 配置查询
      tags:
      - Config
  /games/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: is_enabled
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 比赛查询
      tags:
      - Game
    post:
      consumes:
      - application/json
      parameters:
      - description: GameCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.GameCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建比赛
      tags:
      - Game
  /games/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: GameDeleteRequest
        in: body
        name: 删除请求
        required: true
        schema:
          $ref: '#/definitions/request.GameDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛
      tags:
      - Game
    put:
      consumes:
      - application/json
      parameters:
      - description: GameUpdateRequest
        in: body
        name: 更新请求
        required: true
        schema:
          $ref: '#/definitions/request.GameUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新比赛
      tags:
      - Game
  /games/{id}/broadcast:
    get:
      description: 广播消息
      responses: {}
      summary: 广播消息
      tags:
      - Game
  /games/{id}/challenges:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查询比赛的挑战
      tags:
      - Game
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 添加比赛的挑战
      tags:
      - Game
  /games/{id}/challenges/{challenge_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛的挑战
      tags:
      - Game
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新比赛的挑战
      tags:
      - Game
  /games/{id}/notices:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查询比赛的通知
      tags:
      - Game
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 添加比赛的通知
      tags:
      - Game
  /games/{id}/notices/{notice_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛的通知
      tags:
      - Game
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新比赛的通知
      tags:
      - Game
  /games/{id}/poster:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除海报
      tags:
      - Game
    post:
      consumes:
      - application/json
      parameters:
      - description: poster
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 保存头图
      tags:
      - Game
  /games/{id}/teams:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查询比赛的团队
      tags:
      - Game
    post:
      consumes:
      - application/json
      parameters:
      - description: GameTeamCreateRequest
        in: body
        name: 加入请求
        required: true
        schema:
          $ref: '#/definitions/request.GameTeamCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 加入比赛
      tags:
      - Game
  /games/{id}/teams/{team_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛的团队
      tags:
      - Game
    put:
      consumes:
      - application/json
      parameters:
      - description: GameTeamUpdateRequest
        in: body
        name: 允许加入请求
        required: true
        schema:
          $ref: '#/definitions/request.GameTeamUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 允许加入比赛
      tags:
      - Game
  /pods/:
    get:
      description: 实例查询
      parameters:
      - in: query
        name: challenge_id
        type: integer
      - in: query
        name: game_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: is_available
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: team_id
        type: integer
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 实例查询
      tags:
      - Pod
    post:
      consumes:
      - application/json
      description: 创建实例
      parameters:
      - description: PodCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建实例
      tags:
      - Pod
  /pods/{id}:
    delete:
      description: 停止并删除容器
      parameters:
      - description: PodRemoveRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodRemoveRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 停止并删除容器
      tags:
      - Pod
    put:
      description: 容器续期
      parameters:
      - description: PodRenewRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodRenewRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 容器续期
      tags:
      - Pod
  /submissions/:
    get:
      consumes:
      - application/json
      parameters:
      - description: 题目 Id
        in: query
        name: challenge_id
        type: integer
      - description: 比赛 Id
        in: query
        name: game_id
        type: integer
      - description: 是否详细
        in: query
        name: is_detailed
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: size
        type: integer
      - description: 排序参数
        in: query
        name: sort_key
        type: string
      - description: 排序方式
        in: query
        name: sort_order
        type: string
      - description: 评判结果
        in: query
        name: status
        type: integer
      - description: 团队 Id
        in: query
        name: team_id
        type: integer
      - description: 用户 Id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 提交记录查询
      tags:
      - Submission
    post:
      consumes:
      - application/json
      parameters:
      - description: SubmissionCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.SubmissionCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 提交
      tags:
      - Submission
  /submissions/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SubmissionDeleteRequest
        in: body
        name: 删除请求
        required: true
        schema:
          $ref: '#/definitions/request.SubmissionDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete submission
      tags:
      - Submission
  /teams/:
    get:
      consumes:
      - application/json
      description: 查找团队
      parameters:
      - in: query
        name: captain_id
        type: integer
      - in: query
        name: game_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 查找团队
      tags:
      - Team
    post:
      consumes:
      - application/json
      description: 创建团队
      parameters:
      - description: TeamCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建团队
      tags:
      - Team
  /teams/{id}:
    delete:
      consumes:
      - application/json
      description: 删除团队
      parameters:
      - description: TeamDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 删除团队
      tags:
      - Team
    put:
      consumes:
      - application/json
      description: 更新团队
      parameters:
      - description: TeamUpdateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新团队
      tags:
      - Team
  /teams/{id}/avatar:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除头像
      tags:
      - Challenge
    post:
      consumes:
      - application/json
      parameters:
      - description: avatar
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 保存头像
      tags:
      - Challenge
  /teams/{id}/invite:
    get:
      consumes:
      - application/json
      description: 获取邀请码
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 获取邀请码
      tags:
      - Team
    put:
      consumes:
      - application/json
      description: 更新邀请码
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 更新邀请码
      tags:
      - Team
  /teams/{id}/join:
    post:
      consumes:
      - application/json
      description: 加入团队
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 加入团队
      tags:
      - Team
  /teams/{id}/leave:
    delete:
      consumes:
      - application/json
      description: 离开团队
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 离开团队
      tags:
      - Team
  /teams/{id}/users/:
    post:
      consumes:
      - application/json
      description: 加入团队
      parameters:
      - description: TeamUserCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamUserCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 加入团队
      tags:
      - Team
  /teams/{id}/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: 踢出团队
      parameters:
      - description: TeamUserDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamUserDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 踢出团队
      tags:
      - Team
  /users/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: group
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户查询
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: UserCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.UserCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户创建
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: UserDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户删除
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: UserUpdateRequest
        in: body
        name: 更新请求
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户更新
      tags:
      - User
  /users/{id}/avatar:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除头像
      tags:
      - Challenge
    post:
      consumes:
      - application/json
      parameters:
      - description: avatar
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 保存头像
      tags:
      - Challenge
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserLoginRequest
        in: body
        name: 登录请求
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户登录
      tags:
      - User
  /users/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户登出
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserRegisterRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户注册
      tags:
      - User
swagger: "2.0"
